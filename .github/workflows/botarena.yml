name: Bot Arena CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: clippy, rustfmt

    # Linux dependencies for Macroquad
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev

    # Cache dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    # Check formatting
    - name: Check formatting
      run: cargo fmt -- --check

    # Run clippy
    - name: Clippy
      run: cargo clippy -- -D warnings

    # Run tests
    - name: Run tests
      run: cargo test --verbose

    # Build in release mode
    - name: Build (release)
      run: cargo build --release

    # Optional: Upload artifacts
    - name: Upload artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: botarena-build
        path: target/release
